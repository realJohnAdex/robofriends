{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","_ref","robots","StrictMode","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.ae8ecd88.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst { name, email, id } = props;\n\treturn(\n\t\t<div className='tc  bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt= 'robots'  src={`https://robohash.org/ ${id}?200x200`} />\n\t\t\t<div> \n\t\t\t\t<h2> {name} </h2>\n\t\t\t\t<p> {email} </p>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<React.StrictMode> \n\t\t\t{\n\t\t\t\trobots.map((user, i) => {\n\t\t\t\t\treturn (<Card \n\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\tid={robots[i].id}  \n\t\t\t\t\t\tname = {robots[i].name} \n\t\t\t\t\t\temail= {robots[i].email} \n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n  \t\t</React.StrictMode>\n\t\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\treturn(\n\t\t\t<div className='pa2'>\n\t\t\t\t<input \n\t\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\t\ttype='search' \n\t\t\t\t\tplaceholder='search robots'\n\t\t\t\t\tonChange={searchChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '1px solid white', height: '600px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\n\nexport default Scroll","import React, { Component } from 'react';\n\n\nclass ErrorBoundary extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\n\t\tthis.setState({ hasError: true })\n\t}\n\n\trender(){\n\t\tif (this.state.hasError){\n\t\t\treturn<h1>Ooops, that is not good</h1>\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css'\n\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: '',\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({ robots: users }));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value });\n\t}\n\n\trender() {\n\t\tconst { robots, searchfield } = this.state;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t});\n\t\t\treturn !robots.length ?\n\t\t\t<h1> Loading... </h1> :\n\t\t\t(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'> RoboFriends </h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div> \n\t\t\t);\n\t\t}\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}